————————————————————————
CSC 370 Assignment3
Zhengtang Wang
V00802086
————————————————————————
1.1

CREATE TABLE Classes(
	class VARCHAR(20),
	type CHAR(2),
	country VARCHAR(20),
	numGuns INT,
	bore INT,
	displacement INT
);

CREATE TABLE Ships(
	name VARCHAR(20),
	class VARCHAR(20),
	launched INT
);

CREATE TABLE Battles(
	name VARCHAR(20),
	date_fought DATE
);

CREATE TABLE Outcomes(
	ship VARCHAR(20),
	battle VARCHAR(20),
	result VARCHAR(10)
);
————————————————————————
1.2

INSERT INTO Classes VALUES('Bismarck', 'bb', 'Germany', 8, 15, 42000);
INSERT INTO Classes VALUES('Kongo', 'bc', 'Japan', 8, 14, 32000);
INSERT INTO Classes VALUES('North Carolina', 'bb', 'USA', 9, 16, 37000);
INSERT INTO Classes VALUES('Renown', 'bc', 'Gt. Britain', 6, 15, 32000);
INSERT INTO Classes VALUES('Revenge', 'bb', 'Gt. Britain', 8, 15, 29000);
INSERT INTO Classes VALUES('Tennessee', 'bb', 'USA', 12, 14, 32000);
INSERT INTO Classes VALUES('Yamato', 'bb', 'Japan', 9, 18, 65000);

INSERT INTO Ships VALUES('California', 'Tennessee', 1921);
INSERT INTO Ships VALUES('Haruna', 'Kongo', 1915);
INSERT INTO Ships VALUES('Hiei', 'Kongo', 1914);
INSERT INTO Ships VALUES('Iowa', 'Iowa', 1943);
INSERT INTO Ships VALUES('Kirishima', 'Kongo', 1914);
INSERT INTO Ships VALUES('Kongo', 'Kongo', 1913);
INSERT INTO Ships VALUES('Missouri', 'Iowa', 1944);
INSERT INTO Ships VALUES('Musashi', 'Yamato', 1942);
INSERT INTO Ships VALUES('New Jersey', 'Iowa', 1943);
INSERT INTO Ships VALUES('North Carolina', 'North Carolina', 1941);
INSERT INTO Ships VALUES('Ramilles', 'Revenge', 1917); 
INSERT INTO Ships VALUES('Renown', 'Renown', 1916); 
INSERT INTO Ships VALUES('Repulse', 'Renown', 1916); 
INSERT INTO Ships VALUES('Resolution', 'Revenge', 1916); 
INSERT INTO Ships VALUES('Revenge', 'Revenge', 1916); 
INSERT INTO Ships VALUES('Royal Oak', 'Revenge', 1916); 
INSERT INTO Ships VALUES('Royal Sovereign', 'Revenge', 1916); 
INSERT INTO Ships VALUES('Tennessee', 'Tennessee', 1920); 
INSERT INTO Ships VALUES('Washington', 'North Carolina', 1941);
INSERT INTO Ships VALUES('Wisconsin', 'Iowa', 1944); 
INSERT INTO Ships VALUES('Yamato', 'Yamato', 1941);

INSERT INTO Battles VALUES('North Atlantic', TO_DATE('27-May-1941', 'dd-Mon-yyyy'));
INSERT INTO Battles VALUES('Guadalcanal', TO_DATE('15-Nov-1942', 'dd-Mon-yyyy'));
INSERT INTO Battles VALUES('North Cape', TO_DATE('26-Dec-1943', 'dd-Mon-yyyy')); 
INSERT INTO Battles VALUES('Surigao Strait', TO_DATE('25-Oct-1944', 'dd-Mon-yyyy'));

INSERT INTO Outcomes VALUES('Bismarck', 'North Atlantic', 'sunk'); 
INSERT INTO Outcomes VALUES('California', 'Surigao Strait', 'ok'); 
INSERT INTO Outcomes VALUES('Duke of York', 'North Cape', 'ok'); 
INSERT INTO Outcomes VALUES('Fuso', 'Surigao Strait', 'sunk'); 
INSERT INTO Outcomes VALUES('Hood', 'North Atlantic', 'sunk'); 
INSERT INTO Outcomes VALUES('King George V', 'North Atlantic', 'ok'); 
INSERT INTO Outcomes VALUES('Kirishima', 'Guadalcanal', 'sunk'); 
INSERT INTO Outcomes VALUES('Prince of Wales', 'North Atlantic', 'damaged');
INSERT INTO Outcomes VALUES('Rodney', 'North Atlantic', 'ok'); 
INSERT INTO Outcomes VALUES('Scharnhorst', 'North Cape', 'sunk'); 
INSERT INTO Outcomes VALUES('South Dakota', 'Guadalcanal', 'ok'); 
INSERT INTO Outcomes VALUES('West Virginia', 'Surigao Strait', 'ok'); 
INSERT INTO Outcomes VALUES('Yamashiro', 'Surigao Strait', 'sunk'); 
————————————————————————
2.1

SELECT name FROM Classes JOIN Ships USING(class)
WHERE launched >= 1921 AND displacement > 35000;
————————————————————————
2.2

SELECT O.ship, A.displacement, A.numGuns
FROM (SELECT * FROM Classes C FULL OUTER JOIN Ships S ON C.class=S.class) A
	FULL OUTER JOIN Outcomes O ON A.name=O.ship
WHERE O.battle='Guadalcanal';
————————————————————————
2.3

SELECT Ships.name AS name FROM Ships
UNION
SELECT Outcomes.ship AS name FROM Outcomes;
————————————————————————
2.4

SELECT Country FROM Classes WHERE type='bc'
INTERSECT
SELECT Country FROM Classes WHERE type='bb';
————————————————————————
2.5

CREATE VIEW OutcomesWithDate AS
	SELECT Outcomes.ship, Outcomes.battle, Outcomes.result, Battles.date_fought
	FROM Outcomes JOIN Battles ON Outcomes.battle=Battles.name;
	
SELECT A.ship FROM OutcomesWithDate A, OutcomesWithDate B
WHERE B.date_fought>A.date_fought AND A.result='damaged' AND A.ship=B.ship;

DROP VIEW OutcomesWithDate;
————————————————————————
2.6

SELECT country FROM Classes
WHERE numGuns=(SELECT MAX(numGuns) FROM Classes);
————————————————————————
2.7

CREATE VIEW cs AS
	SELECT C.class, C.numGuns, C.bore, S.name
	FROM Classes C JOIN Ships S ON C.class=S.class;
	
SELECT C.name FROM cs C, (SELECT bore, MAX(numGuns) AS m FROM cs GROUP BY bore) B
WHERE C.bore=B.bore AND C.numGuns=B.m;	
	
DROP VIEW cs;
————————————————————————
2.8

CREATE VIEW q8A AS
	SELECT class
	FROM Ships
	GROUP BY class
	HAVING COUNT(name)>=3;

CREATE VIEW q8B AS
	SELECT class, COUNT(result) AS sunk_ships
	FROM Ships S LEFT OUTER JOIN Outcomes O ON S.name=O.ship
	GROUP BY class;

SELECT * FROM q8A NATURAL JOIN q8B;

DROP VIEW q8A;
DROP VIEW q8B;
————————————————————————
3.1

INSERT INTO Classes(class, type, country, bore, displacement)
VALUES('Vittorio Veneto', 'bb', 'Italy', 15, 41000);
INSERT INTO Ships(name, class, launched)
VALUES('Vittorio Veneto', 'Vittorio Veneto', 1940);
INSERT INTO Ships(name, class, launched)
VALUES('Italia', 'Vittorio Veneto', 1940);
INSERT INTO Ships(name, class, launched)
VALUES('Roma', 'Vittorio Veneto', 1942);
————————————————————————
3.2

DELETE FROM Classes WHERE class
IN(SELECT class FROM Classes MINUS
	SELECT class FROM Ships 
	GROUP BY class HAVING COUNT(*)>=3);
————————————————————————
3.3

UPDATE Classes
SET bore=bore*2.5, displacement=displacement*1.1;
————————————————————————
4.1

ALTER TABLE Classes ADD CONSTRAINT classes_pk PRIMARY KEY(class);

CREATE TABLE Exceptions(
	row_id ROWID,
	owner VARCHAR2(30),
	table_name VARCHAR(30),
	constraints VARCHAR(30)
);

ALTER TABLE Ships ADD CONSTRAINT ship_to_classes_fk
FOREIGN KEY(class) REFERENCES Classes(class)
	EXCEPTIONS INTO Exceptions;
	
DELETE FROM Ships
WHERE class IN(SELECT class FROM Ships, Exceptions
	WHERE Ships.rowid=Exceptions.row_id
);

ALTER TABLE Ships ADD CONSTRAINT ship_to_classes_fk
FOREIGN KEY(class) REFERENCES Classes(class);
————————————————————————
4.2

ALTER TABLE Battles ADD CONSTRAINT battles_pk PRIMARY KEY(name);

ALTER TABLE Outcomes ADD CONSTRAINT outcomes_to_battles_fk
FOREIGN KEY(battle) REFERENCES Battles(name)
	EXCEPTIONS INTO Exceptions;
————————————————————————
4.3

ALTER TABLE Ships ADD CONSTRAINT ships_pk PRIMARY KEY(name);

ALTER TABLE Outcomes ADD CONSTRAINT outcomes_to_ships_fk
FOREIGN KEY(ship) REFERENCES Ships(name)
	EXCEPTIONS INTO Exceptions;
	
DELETE FROM Outcomes
WHERE ship IN(SELECT ship FROM Outcomes, Exceptions
	WHERE Outcomes.rowid=Exceptions.row_id
);

ALTER TABLE Outcomes ADD CONSTRAINT outcomes_to_ships_fk
FOREIGN KEY(ship) REFERENCES ships(name);
————————————————————————
4.4

ALTER TABLE Classes ADD CONSTRAINT check_bore CHECK(bore<=16)
	EXCEPTIONS INTO Exceptions;
	
ALTER TABLE Ships DROP CONSTRAINT ship_to_classes_fk;

DELETE FROM Classes
WHERE Classes.bore IN(SELECT DISTINCT bore FROM Classes, Exceptions
	WHERE Classes.rowid=Exceptions.row_id
);

ALTER TABLE Outcomes ADD CONSTRAINT check_bore CHECK(bore<=16);
————————————————————————
4.5

ALTER TABLE Classes ADD CONSTRAINT check_guns CHECK(not(numGuns>=9) OR bore<=14)
	EXCEPTIONS INTO Exceptions;
	
DELETE FROM Classes
WHERE class IN(SELECT class FROM Classes, Exceptions
	WHERE Classes.rowid=Exceptions.row_id
);
————————————————————————
4.6

CREATE OR REPLACE VIEW OutcomesView AS
	SELECT ship, battle, result
	FROM Outcomes O
	WHERE NOT EXISTS(
		SELECT * FROM Ships S, Battles B
		WHERE S.name=O.ship AND O.battle=B.name AND
			S.launched>TO_NUMBER(TO_CHAR(B.date_fought, 'yyyy'))
	)
WITH CHECK OPTION;
————————————————————————
4.7

CREATE OR REPLACE VIEW ShipsView AS
	SELECT name, class, launched
	FROM Ships A
	WHERE NOT EXISTS(
		SELECT * FROM Ships S, Classes C
		WHERE S.name=A.name AND A.class=C.class AND
			S.launched<(SELECT MIN(launched) 
				FROM Ships B WHERE B.class=A.class)
	)
WITH CHECK OPTION;
————————————————————————
4.8

CREATE OR REPLACE VIEW OBView AS
	SELECT O.ship, O.battle, A.date_fought
	FROM Outcomes O, Battles A
	WHERE NOT EXISTS(
		SELECT * FROM Ships S, Battles B
		WHERE S.name=O.ship AND O.battle=B.name AND
			TO_NUMBER(TO_CHAR(B.date_fought, 'yyyy'))>TO_NUMBER(TO_CHAR((
				SELECT X.date_fought FROM Battles X, Outcomes Y
				WHERE Y.result='sunk' AND X.name=Y.battle), 'yyyy'))
	)
WITH CHECK OPTION;
————————————————————————

DROP TABLE OUTCOMES;
DROP TABLE BATTLES;
DROP TABLE SHIPS;
DROP TABLE CLASSES;
DROP TABLE EXCEPTIONS;
DROP VIEW OBVIEW;
DROP VIEW OUTCOMESVIEW;
DROP VIEW SHIPSVIEW;